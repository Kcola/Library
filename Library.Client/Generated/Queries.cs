using System;
using System.Collections;
using System.Collections.Generic;
using StrawberryShake;

namespace Library.Client.Generated
{
    [System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class Queries
        : global::StrawberryShake.IDocument
    {
        private readonly byte[] _hashName = new byte[]
        {
            109,
            100,
            53,
            72,
            97,
            115,
            104
        };
        private readonly byte[] _hash = new byte[]
        {
            54,
            50,
            99,
            97,
            98,
            54,
            54,
            54,
            56,
            53,
            99,
            99,
            99,
            53,
            52,
            49,
            48,
            100,
            51,
            53,
            97,
            48,
            51,
            99,
            54,
            48,
            50,
            51,
            97,
            53,
            54,
            56
        };
        private readonly byte[] _content = new byte[]
        {
            113,
            117,
            101,
            114,
            121,
            32,
            103,
            101,
            116,
            68,
            111,
            99,
            115,
            40,
            36,
            115,
            101,
            97,
            114,
            99,
            104,
            58,
            32,
            83,
            116,
            114,
            105,
            110,
            103,
            44,
            32,
            36,
            97,
            102,
            116,
            101,
            114,
            58,
            32,
            83,
            116,
            114,
            105,
            110,
            103,
            44,
            32,
            36,
            98,
            101,
            102,
            111,
            114,
            101,
            58,
            32,
            83,
            116,
            114,
            105,
            110,
            103,
            41,
            32,
            123,
            32,
            100,
            111,
            99,
            40,
            102,
            105,
            114,
            115,
            116,
            58,
            32,
            49,
            48,
            44,
            32,
            119,
            104,
            101,
            114,
            101,
            58,
            32,
            123,
            32,
            116,
            105,
            116,
            108,
            101,
            95,
            99,
            111,
            110,
            116,
            97,
            105,
            110,
            115,
            58,
            32,
            36,
            115,
            101,
            97,
            114,
            99,
            104,
            32,
            125,
            44,
            32,
            97,
            102,
            116,
            101,
            114,
            58,
            32,
            36,
            97,
            102,
            116,
            101,
            114,
            44,
            32,
            98,
            101,
            102,
            111,
            114,
            101,
            58,
            32,
            36,
            98,
            101,
            102,
            111,
            114,
            101,
            41,
            32,
            123,
            32,
            95,
            95,
            116,
            121,
            112,
            101,
            110,
            97,
            109,
            101,
            32,
            101,
            100,
            103,
            101,
            115,
            32,
            123,
            32,
            95,
            95,
            116,
            121,
            112,
            101,
            110,
            97,
            109,
            101,
            32,
            99,
            117,
            114,
            115,
            111,
            114,
            32,
            110,
            111,
            100,
            101,
            32,
            123,
            32,
            95,
            95,
            116,
            121,
            112,
            101,
            110,
            97,
            109,
            101,
            32,
            100,
            111,
            99,
            105,
            100,
            32,
            116,
            105,
            116,
            108,
            101,
            32,
            105,
            115,
            98,
            110,
            32,
            112,
            68,
            97,
            116,
            101,
            32,
            112,
            78,
            97,
            109,
            101,
            32,
            99,
            111,
            112,
            121,
            40,
            119,
            104,
            101,
            114,
            101,
            58,
            32,
            123,
            32,
            97,
            118,
            97,
            105,
            108,
            97,
            98,
            108,
            101,
            58,
            32,
            116,
            114,
            117,
            101,
            32,
            125,
            41,
            32,
            123,
            32,
            95,
            95,
            116,
            121,
            112,
            101,
            110,
            97,
            109,
            101,
            32,
            99,
            111,
            112,
            121,
            105,
            100,
            32,
            125,
            32,
            125,
            32,
            125,
            32,
            112,
            97,
            103,
            101,
            73,
            110,
            102,
            111,
            32,
            123,
            32,
            95,
            95,
            116,
            121,
            112,
            101,
            110,
            97,
            109,
            101,
            32,
            101,
            110,
            100,
            67,
            117,
            114,
            115,
            111,
            114,
            32,
            104,
            97,
            115,
            78,
            101,
            120,
            116,
            80,
            97,
            103,
            101,
            32,
            104,
            97,
            115,
            80,
            114,
            101,
            118,
            105,
            111,
            117,
            115,
            80,
            97,
            103,
            101,
            32,
            115,
            116,
            97,
            114,
            116,
            67,
            117,
            114,
            115,
            111,
            114,
            32,
            125,
            32,
            116,
            111,
            116,
            97,
            108,
            67,
            111,
            117,
            110,
            116,
            32,
            125,
            32,
            125
        };

        public ReadOnlySpan<byte> HashName => _hashName;

        public ReadOnlySpan<byte> Hash => _hash;

        public ReadOnlySpan<byte> Content => _content;

        public static Queries Default { get; } = new Queries();

        public override string ToString() => 
            @"query getDocs($search: String, $after: String, $before: String) {
              doc(first: 10, where: { title_contains: $search }, after: $after, before: $before) {
                edges {
                  cursor
                  node {
                    docid
                    title
                    isbn
                    pDate
                    pName
                    copy(where: { available: true }) {
                      copyid
                    }
                  }
                }
                pageInfo {
                  endCursor
                  hasNextPage
                  hasPreviousPage
                  startCursor
                }
                totalCount
              }
            }";
    }
}
