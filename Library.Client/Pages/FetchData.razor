@page "/fetchdata"
@using Library.Client.Schema.Generated
@using Library.Client.Services
@inject ILibraryClient LibraryClient
@inject IAuth Auth;
@inject ITokenStore TokenStore

<h1>Books</h1>

@if (books == null)
{
    <p><em>Loading...</em></p>
}    
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Doc Id</th>
                <th>Title</th>
                <th>Genre</th>
                <th>ISBN</th>
                <th>Publishing Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in books)
            {
                <tr>
                    <td>@book.Docid</td>
                    <td>@book.Doc.Title</td>
                    <td>@book.Genre</td>
                    <td>@book.Isbn</td>
                    <td>@book.Doc.Pdate.Date</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private IReadOnlyList<IBook> books;
    protected override async Task OnInitializedAsync()
    {
        if(!Auth.LoggedIn)
        await Auth.Login("kola", "yer");
        
        if (TokenStore.GetToken() != "")
        {
            var response = await LibraryClient.GetBooksAsync(1980);
            if (response.Data != null) books = response.Data.Book.Nodes;
        }
    }
}
